name: Build and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: windows
            artifact-name: windows-binaries
          - os: macos-latest
            platform: macos
            artifact-name: macos-binaries
          - os: ubuntu-latest
            platform: linux
            artifact-name: linux-binaries

    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

    - name: Install frontend dependencies
      run: npm install

    - name: Build executables
      run: bun run scripts/fetch-and-build.js ${{ matrix.platform }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact-name }}
        path: src-tauri/binaries/*
        retention-days: 90

  build-tauri:
    needs: build
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu

    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

    - name: Install frontend dependencies
      run: npm install

    - name: Download CLI binaries
      uses: actions/download-artifact@v4
      with:
        name: ${{ matrix.os == 'windows-latest' && 'windows-binaries' || matrix.os == 'ubuntu-latest' && 'linux-binaries' || 'macos-binaries' }}
        path: src-tauri/binaries/

    - name: Build Tauri app
      uses: tauri-apps/tauri-action@v0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tagName: app-v__VERSION__
        releaseName: 'Claudia v__VERSION__'
        releaseBody: 'See the assets to download this version and install.'
        releaseDraft: true
        prerelease: false
        args: --target ${{ matrix.target }}

  release:
    if: github.event_name == 'release'
    needs: [build, build-tauri]
    runs-on: ubuntu-latest
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Display structure of downloaded files
      run: ls -la
      
    - name: Upload release assets
      uses: softprops/action-gh-release@v1
      with:
        files: |
          windows-binaries/*
          macos-binaries/*
          linux-binaries/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
